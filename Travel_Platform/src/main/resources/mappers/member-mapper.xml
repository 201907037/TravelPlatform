<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

<!-- 
		MEMBER 테이블의 조회결과를 
		Member VO 객체로 옮겨주는 ResultMap	
	-->
	<resultMap id="memberResultSet"
			   type="member">
		<result column="USER_NO" property="userNo" />	   
		<result column="USER_ID" property="userId" />
		<result column="USER_PWD" property="userPwd" />
		<result column="NICK_NAME" property="nickName" />
		<result column="NAME" property="name" />
		<result column="AGE" property="age" />
		<result column="EMAIL" property="email" />
		<result column="PHONE" property="phone" />
		<result column="ADDRESS" property="address" />
		<result column="GENDER" property="gender" />
		<result column="CHANGE_NAME" property="changeName" />
		<result column="CREATE_DATE" property="createDate" />
		<result column="MODIFY_DATE" property="modifyDate" />
		<result column="STATUS" property="status" />
		<result column="MAIL_AUTH" property="mail_auth" />
		<result column="MAIL_KEY" property="mail_key" />
	</resultMap>

	<!-- 로그인용 쿼리문 -->
	<select id="loginMember" 
			parameterType="member"
			resultMap="memberResultSet">
	<!-- 
		암호화 작업 전 : 아이디, 비번 둘다 동등비교
		SELECT *
		  FROM MEMBER
		 WHERE USER_ID = #{userId}
		   AND USER_PWD = #{userPwd}
		   AND STATUS = 'Y'
	-->
	<!-- 암호화 작업 후 : 오로지 아이디만을 가지고 조회 -->
		SELECT *
		  FROM MEMBER
		 WHERE USER_ID = #{userId}
		   AND STATUS = 'Y'
	</select>
	
	<!-- 회원가입용 쿼리문 -->
	<insert id="insertMember"
			parameterType="member">
		INSERT INTO MEMBER(USER_NO
						 , USER_ID
		                 , USER_PWD
		                 , NAME
		                 , NICK_NAME
		                 , EMAIL
		                 , AGE
		                 , GENDER
		                 , ADDRESS
		                 , PHONE)
		            VALUES(SEQ_USER_NO.NEXTVAL
		            	 , #{userId}
		                 , #{userPwd}
		                 , #{name}
		                 , #{nickName}
		                 , #{email}
		                 , #{age}
		                 , #{gender}
		                 , #{address}
		                 , #{phone})
	</insert>

	<!-- 회원정보 수정용 쿼리문 -->
	<update id="updateMember"
			parameterType="member">
		UPDATE MEMBER
		   SET NAME = #{name}
		     , NICK_NAME = #{nickName}
		     , EMAIL = #{email}
		     , AGE = #{age}
		     , PHONE = #{phone}
		     , ADDRESS = #{address}
		     , GENDER = #{gender}
		     , MODIFY_DATE = SYSDATE
		 WHERE USER_ID = #{userId}
		   AND STATUS = 'Y'
	</update>
	
	<!-- 회원 탈퇴용 쿼리문 -->
	<update id="deleteMember"
			parameterType="string">
		UPDATE MEMBER
		   SET STATUS = 'N'
		 WHERE USER_ID = #{userId}
		   AND STATUS = 'Y'
	</update>
	
	<!-- 아이디 중복확인용 쿼리문 -->
	<select id="idCheck"
			parameterType="string"
			resultType="_int">
		SELECT COUNT(*)
		  FROM MEMBER
		 WHERE USER_ID = #{checkId}
	</select>
	
	<select id="nickCheck"
			parameterType="string"
			resultType="_int">
		SELECT COUNT(*)
		  FROM MEMBER
		 WHERE NICK_NAME = #{checkNick}
	</select>
	
	<select id="emailCheck"
			parameterType="string"
			resultType="_int">
		SELECT COUNT(*)
		  FROM MEMBER
		 WHERE EMAIL = #{checkEmail}
	</select>
	
	<!-- 아이디 찾기 -->
	<select id="findUserIdByEmail" parameterType="String" resultType="String">
        SELECT user_id 
        FROM member
        WHERE email = #{email}
    </select>
    
    <select id="findMemberByEmail" parameterType="String" resultType="member">
        SELECT * FROM member WHERE email = #{email}
    </select>

    <update id="updatePassword" parameterType="com.tp.travely.member.model.vo.Member">
        UPDATE member
        SET user_pwd = #{userPwd}
        WHERE user_id = #{userId}
    </update>
    
    

	
	

	
	
	




</mapper>